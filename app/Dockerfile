#   TO BUILD IMAGE run the following from root (app)
#   'docker build . -t signlingo'
#   alternatively, pull from the dockerhub image here https://hub.docker.com/repository/docker/coopervos/beanstalk-flask
#
#   TO RUN
#   'docker run -d -p 5000:5000 signlingo'
#
#   TO VIEW
#   http://localhost:5000/

#   TO DEPLOY using dockerrun.aws.json after building the image
#   Navigate to remote-docker folder in your terminal and run the following commands using the eb CLI:
#   ##################################################################################################
#   'eb init -p docker signlingo --region us-east-1'
#   'eb create signlingo-ds-test'
#   'eb open'
#   ##################################################################################################
# 

# START DOCKERFILE HERE
# Probably don't need both images...but what's not broken don't fix.
FROM ubuntu:16.04
FROM python:3.7-slim

# Python, pip, and packages necessary to install opencv
RUN apt-get update -y && \
    apt-get install -y python3-pip python3-dev libglib2.0 libsm6 libxext6 libxrender-dev

# Compile and install ffmpeg from source
RUN apt-get update -qq && apt-get -y install \
      autoconf \
      automake \
      build-essential \
      cmake \
      git-core \
      libass-dev \
      libfreetype6-dev \
      libsdl2-dev \
      libtool \
      libva-dev \
      libvdpau-dev \
      libvorbis-dev \
      libxcb1-dev \
      libxcb-shm0-dev \
      libxcb-xfixes0-dev \
      pkg-config \
      texinfo \
      wget \
      zlib1g-dev \
      nasm \
      yasm \
      libx265-dev \
      libnuma-dev \
      libvpx-dev \
      libmp3lame-dev \
      libopus-dev \
      libx264-dev 
      #libfdk-aac-dev
RUN mkdir -p ~/ffmpeg_sources ~/bin && cd ~/ffmpeg_sources && \
    wget -O ffmpeg-4.2.2.tar.bz2 https://ffmpeg.org/releases/ffmpeg-4.2.2.tar.bz2 && \
    tar xjvf ffmpeg-4.2.2.tar.bz2 && \
    cd ffmpeg-4.2.2 && \
    PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
      --prefix="$HOME/ffmpeg_build" \
      --pkg-config-flags="--static" \
      --extra-cflags="-I$HOME/ffmpeg_build/include" \
      --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
      --extra-libs="-lpthread -lm" \
      --bindir="$HOME/bin" \
      #--enable-libfdk-aac \
      --enable-gpl \
      --enable-libass \
      --enable-libfreetype \
      --enable-libmp3lame \
      --enable-libopus \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-libx264 \
      --enable-libx265 \
      --enable-nonfree && \
    PATH="$HOME/bin:$PATH" make -j8 && \
    make install -j8 && \
    hash -r
RUN mv ~/bin/ffmpeg /usr/local/bin && mv ~/bin/ffprobe /usr/local/bin && mv ~/bin/ffplay /usr/local/bin

# Installing requirements.txt libraries
COPY ./requirements.txt /requirements.txt

WORKDIR /

RUN pip3 install --no-cache-dir -r requirements.txt

COPY . /

# Running the flask app and exposing to port 5000
ENTRYPOINT [ "python3" ]

EXPOSE 5000
CMD [ "app.py", "run" ]
